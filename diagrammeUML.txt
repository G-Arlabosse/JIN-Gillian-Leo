@startuml

abstract	Entity{
{field} 
{method}
}

class		Player{
{field} 
{method}
}

abstract	Enemy{
{field} 
{method}
}

class		Corn{
{field} 
{method}
}

class		Milk{
{field} 
{method}
}

class		Carrot{
{field} 
{method}
}

class		Wall{
{field} 
{method}
}

class		WorldManager{
{field} 
{method}
}

class		GameManager{
{field} 
{method}
}

class		LevelManager{
{field} 
{method}
}

class		Graph{
{field} 
{method}
}

class		Hitbox{
{field} 
{method}
}

class		Hurtbox{
{field} 
{method}
}

class		Projectile{
{field} 
{method}
}

class		TextureHandler{
{field}		textures: map<string, Texture>
{method}	getTexture(string name)
}

Player ..|> Entity
Enemy ..|> Entity
Corn ..|> Enemy
Milk ..|> Enemy
Carrot ..|> Enemy
WorldManager*-- LevelManager
LevelManager *-- Graph
Entity --> Graph
LevelManager *-- Entity
LevelManager *-- Wall
GameManager *-- WorldManager
' vvv Modifications éventuelles vvv
Entity *-- Hitbox
Entity *-- Hurtbox
Hurtbox o-- Entity
' vvv Implémenter Médiator ? vvv
Hitbox <--> Hurtbox
Projectile *-- Hitbox
Wall *-- Hitbox
Entity --> TextureHandler
Wall --> TextureHandler
Projectile --> TextureHandler
' vvv Changer pour un Prototype pattern vvv
Corn *-- Projectile

@enduml